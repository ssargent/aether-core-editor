syntax = "proto3";

package game.v1;

option go_package = "github.com/ssargent/aether-core-editor/gen/game/v1;gamev1";

import "google/protobuf/timestamp.proto";
import "google/protobuf/struct.proto";

// Common metadata for all entities
message Metadata {
  google.protobuf.Timestamp created_at = 1;
  google.protobuf.Timestamp updated_at = 2;
}

message PaginationRequest {
  int32 page = 1;
  int32 page_size = 2;
}

message PaginationResponse {
  int32 total_count = 1;
  int32 page_count = 2;
  int32 current_page = 3;
  int32 page_size = 4;
}

// World
message World {
  int64 id = 1;
  string code = 2;
  string name = 3;
  string description = 4;
  Metadata metadata = 5;
}

message CreateWorldRequest {
  string code = 1;
  string name = 2;
  string description = 3;
}

message UpdateWorldRequest {
  int64 id = 1;
  string code = 2;
  string name = 3;
  string description = 4;
}

message GetWorldRequest {
  int64 id = 1;
}

message DeleteWorldRequest {
  int64 id = 1;
}

message ListWorldsRequest {
  PaginationRequest pagination = 1;
  string code = 2;
  string name = 3;
}

message WorldResponse {
  World world = 1;
}

message ListWorldsResponse {
  repeated World worlds = 1;
  PaginationResponse pagination = 2;
}

// Attribute
message Attribute {
  int64 id = 1;
  string name = 2;
  string description = 3;
  Metadata metadata = 4;
}

message CreateAttributeRequest {
  string name = 1;
  string description = 2;
}

message UpdateAttributeRequest {
  int64 id = 1;
  string name = 2;
  string description = 3;
}

message GetAttributeRequest {
  int64 id = 1;
}

message DeleteAttributeRequest {
  int64 id = 1;
}

message ListAttributesRequest {
  string name = 1;
}

message AttributeResponse {
  Attribute attribute = 1;
}

message ListAttributesResponse {
  repeated Attribute attributes = 1;
  PaginationResponse pagination = 2;
}


// Capability
message Capability {
  int64 id = 1;
  int64 world_id = 2;
  int64 parent_id = 3;
  string capability_type = 4;
  string code = 5;
  string name = 6;
  string description = 7;
  google.protobuf.Struct requirements = 8;
  google.protobuf.Struct actions = 9;
  google.protobuf.Struct access_requirements = 10;
  repeated string tags = 11;
  google.protobuf.Struct gameplay_definition = 12;
  Metadata metadata = 13;
}
message CreateCapabilityRequest {
  int64 world_id = 1;
  int64 parent_id = 2;
  string capability_type = 3;
  string code = 4;
  string name = 5;
  string description = 6;
  google.protobuf.Struct requirements = 7;
  google.protobuf.Struct actions = 8;
  google.protobuf.Struct access_requirements = 9;
  repeated string tags = 10;
  google.protobuf.Struct gameplay_definition = 11;
}
message UpdateCapabilityRequest {
  int64 id = 1;
  int64 parent_id = 2;
  string capability_type = 3;
  string code = 4;
  string name = 5;
  string description = 6;
  google.protobuf.Struct requirements = 7;
  google.protobuf.Struct actions = 8;
  google.protobuf.Struct access_requirements = 9;
  repeated string tags = 10;
  google.protobuf.Struct gameplay_definition = 11;
}
message GetCapabilityRequest {
  int64 id = 1;
}
message DeleteCapabilityRequest {
  int64 id = 1;
}
message ListCapabilitiesRequest {
  int64 world_id = 1;
  string capability_type = 2;
  string code = 3;
  string name = 4;
  int64 parent_id = 5;
  repeated string tags = 6;
}
message CapabilityResponse {
  Capability capability = 1;
}
message ListCapabilitiesResponse {
  repeated Capability capabilities = 1;
  PaginationResponse pagination = 2;
}

// CharacterClass
message CharacterClass {
  int64 id = 1;
  int64 world_id = 2;
  string code = 3;
  string name = 4;
  string description = 5;
  int32 hit_points = 6;
  string stamina_expression = 7;
  string skillpoint_expression = 8;
  google.protobuf.Struct proficiencies = 9;
  Metadata metadata = 10;
}
message CreateCharacterClassRequest {
  int64 world_id = 1;
  string code = 2;
  string name = 3;
  string description = 4;
  int32 hit_points = 5;
  string stamina_expression = 6;
  string skillpoint_expression = 7;
  google.protobuf.Struct proficiencies = 8;
}
message UpdateCharacterClassRequest {
  int64 id = 1;
  string code = 2;
  string name = 3;
  string description = 4;
  int32 hit_points = 5;
  string stamina_expression = 6;
  string skillpoint_expression = 7;
  google.protobuf.Struct proficiencies = 8;
}
message GetCharacterClassRequest {
  int64 id = 1;
}
message DeleteCharacterClassRequest {
  int64 id = 1;
}
message ListCharacterClassesRequest {
  int64 world_id = 1;
  string code = 2;
  string name = 3;
}
message CharacterClassResponse {
  CharacterClass character_class = 1;
}
message ListCharacterClassesResponse {
  repeated CharacterClass character_classes = 1;
  PaginationResponse pagination = 2;
}

// CharacterClassFeature
message CharacterClassFeature {
  int64 id = 1;
  int64 class_id = 2;
  int32 level = 3;
  string code = 4;
  string name = 5;
  string description = 6;
  Metadata metadata = 7;
}
message CreateCharacterClassFeatureRequest {
  int64 class_id = 1;
  int32 level = 2;
  string code = 3;
  string name = 4;
  string description = 5;
}
message UpdateCharacterClassFeatureRequest {
  int64 id = 1;
  int32 level = 2;
  string code = 3;
  string name = 4;
  string description = 5;
}
message GetCharacterClassFeatureRequest {
  int64 id = 1;
}
message DeleteCharacterClassFeatureRequest {
  int64 id = 1;
}
message ListCharacterClassFeaturesRequest {
  int64 class_id = 1;
  int32 level = 2;
  string code = 3;
}
message CharacterClassFeatureResponse {
  CharacterClassFeature character_class_feature = 1;
}
message ListCharacterClassFeaturesResponse {
  repeated CharacterClassFeature character_class_features = 1;
  PaginationResponse pagination = 2;
}

// Currency
message Currency {
  int64 id = 1;
  int64 world_id = 2;
  string code = 3;
  string name = 4;
  string description = 5;
  bool is_spendable = 6;
  Metadata metadata = 7;
}
message CreateCurrencyRequest {
  int64 world_id = 1;
  string code = 2;
  string name = 3;
  string description = 4;
  bool is_spendable = 5;
}
message UpdateCurrencyRequest {
  int64 id = 1;
  string code = 2;
  string name = 3;
  string description = 4;
  bool is_spendable = 5;
}
message GetCurrencyRequest {
  int64 id = 1;
}
message DeleteCurrencyRequest {
  int64 id = 1;
}
message ListCurrenciesRequest {
  int64 world_id = 1;
  string code = 2;
  string name = 3;
  bool is_spendable = 4;
}
message CurrencyResponse {
  Currency currency = 1;
}
message ListCurrenciesResponse {
  repeated Currency currencies = 1;
  PaginationResponse pagination = 2;
}

// Enemy
message Enemy {
  int64 id = 1;
  int64 world_id = 2;
  string code = 3;
  string name = 4;
  string description = 5;
  string class_name = 6;
  int32 level = 7;
  int32 hit_points = 8;
  int32 stamina = 9;
  int32 strength = 10;
  int32 dexterity = 11;
  int32 constitution = 12;
  int32 intelligence = 13;
  int32 wisdom = 14;
  google.protobuf.Struct weapons = 15;
  google.protobuf.Struct armor = 16;
  Metadata metadata = 17;
}
message CreateEnemyRequest {
  int64 world_id = 1;
  string code = 2;
  string name = 3;
  string description = 4;
  string class_name = 5;
  int32 level = 6;
  int32 hit_points = 7;
  int32 stamina = 8;
  int32 strength = 9;
  int32 dexterity = 10;
  int32 constitution = 11;
  int32 intelligence = 12;
  int32 wisdom = 13;
  google.protobuf.Struct weapons = 14;
  google.protobuf.Struct armor = 15;
}
message UpdateEnemyRequest {
  int64 id = 1;
  string code = 2;
  string name = 3;
  string description = 4;
  string class_name = 5;
  int32 level = 6;
  int32 hit_points = 7;
  int32 stamina = 8;
  int32 strength = 9;
  int32 dexterity = 10;
  int32 constitution = 11;
  int32 intelligence = 12;
  int32 wisdom = 13;
  google.protobuf.Struct weapons = 14;
  google.protobuf.Struct armor = 15;
}
message GetEnemyRequest {
  int64 id = 1;
}
message DeleteEnemyRequest {
  int64 id = 1;
}
message ListEnemiesRequest {
  int64 world_id = 1;
  string code = 2;
  string name = 3;
  string class_name = 4;
  int32 level = 5;
}
message EnemyResponse {
  Enemy enemy = 1;
}
message ListEnemiesResponse {
  repeated Enemy enemies = 1;
  PaginationResponse pagination = 2;
}

// ItemCategory
message ItemCategory {
  int64 id = 1;
  int64 parent_id = 2;
  string name = 3;
  string description = 4;
  Metadata metadata = 5;
}
message CreateItemCategoryRequest {
  int64 parent_id = 1;
  string name = 2;
  string description = 3;
}
message UpdateItemCategoryRequest {
  int64 id = 1;
  int64 parent_id = 2;
  string name = 3;
  string description = 4;
}
message GetItemCategoryRequest {
  int64 id = 1;
}
message DeleteItemCategoryRequest {
  int64 id = 1;
}
message ListItemCategoriesRequest {
  int64 parent_id = 1;
  string name = 2;
}
message ItemCategoryResponse {
  ItemCategory item_category = 1;
}
message ListItemCategoriesResponse {
  repeated ItemCategory item_categories = 1;
  PaginationResponse pagination = 2;
}

// Item
message Item {
  int64 id = 1;
  int64 world_id = 2;
  int64 category_id = 3;
  string code = 4;
  string name = 5;
  string description = 6;
  string item_type = 7;
  int64 base_price = 8;
  google.protobuf.Struct item_properties = 9;
  Metadata metadata = 10;
}
message CreateItemRequest {
  int64 world_id = 1;
  int64 category_id = 2;
  string code = 3;
  string name = 4;
  string description = 5;
  string item_type = 6;
  int64 base_price = 7;
  google.protobuf.Struct item_properties = 8;
}
message UpdateItemRequest {
  int64 id = 1;
  int64 category_id = 2;
  string code = 3;
  string name = 4;
  string description = 5;
  string item_type = 6;
  int64 base_price = 7;
  google.protobuf.Struct item_properties = 8;
}
message GetItemRequest {
  int64 id = 1;
}
message DeleteItemRequest {
  int64 id = 1;
}
message ListItemsRequest {
  int64 world_id = 1;
  int64 category_id = 2;
  string code = 3;
  string name = 4;
  string item_type = 5;
}
message ItemResponse {
  Item item = 1;
}
message ListItemsResponse {
  repeated Item items = 1;
  PaginationResponse pagination = 2;
}

// NpcTemplate
message NpcTemplate {
  int64 id = 1;
  string name = 2;
  string description = 3;
  google.protobuf.Struct npc_properties = 4;
  bool can_spawn_multiple = 5;
  bool can_respawn = 6;
  Metadata metadata = 7;
}
message CreateNpcTemplateRequest {
  string name = 1;
  string description = 2;
  google.protobuf.Struct npc_properties = 3;
  bool can_spawn_multiple = 4;
  bool can_respawn = 5;
}
message UpdateNpcTemplateRequest {
  int64 id = 1;
  string name = 2;
  string description = 3;
  google.protobuf.Struct npc_properties = 4;
  bool can_spawn_multiple = 5;
  bool can_respawn = 6;
}
message GetNpcTemplateRequest {
  int64 id = 1;
}
message DeleteNpcTemplateRequest {
  int64 id = 1;
}
message ListNpcTemplatesRequest {
  string name = 1;
  bool can_spawn_multiple = 2;
  bool can_respawn = 3;
}
message NpcTemplateResponse {
  NpcTemplate npc_template = 1;
}
message ListNpcTemplatesResponse {
  repeated NpcTemplate npc_templates = 1;
  PaginationResponse pagination = 2;
}

// NpcSpawnRule
message NpcSpawnRule {
  int64 id = 1;
  int64 npc_template_id = 2;
  int64 world_node_id = 3;
  int32 spawn_chance = 4;
  int32 spawn_quantity_min = 5;
  int32 spawn_quantity_max = 6;
  Metadata metadata = 7;
}
message CreateNpcSpawnRuleRequest {
  int64 npc_template_id = 1;
  int64 world_node_id = 2;
  int32 spawn_chance = 3;
  int32 spawn_quantity_min = 4;
  int32 spawn_quantity_max = 5;
}
message UpdateNpcSpawnRuleRequest {
  int64 id = 1;
  int32 spawn_chance = 2;
  int32 spawn_quantity_min = 3;
  int32 spawn_quantity_max = 4;
}
message GetNpcSpawnRuleRequest {
  int64 id = 1;
}
message DeleteNpcSpawnRuleRequest {
  int64 id = 1;
}
message ListNpcSpawnRulesRequest {
  int64 npc_template_id = 1;
  int64 world_node_id = 2;
}
message NpcSpawnRuleResponse {
  NpcSpawnRule npc_spawn_rule = 1;
}
message ListNpcSpawnRulesResponse {
  repeated NpcSpawnRule npc_spawn_rules = 1;
  PaginationResponse pagination = 2;
}

// Race
message Race {
  int64 id = 1;
  int64 world_id = 2;
  string code = 3;
  string name = 4;
  string description = 5;
  Metadata metadata = 6;
}
message CreateRaceRequest {
  int64 world_id = 1;
  string code = 2;
  string name = 3;
  string description = 4;
}
message UpdateRaceRequest {
  int64 id = 1;
  string code = 2;
  string name = 3;
  string description = 4;
}
message GetRaceRequest {
  int64 id = 1;
}
message DeleteRaceRequest {
  int64 id = 1;
}
message ListRacesRequest {
  int64 world_id = 1;
  string code = 2;
  string name = 3;
}
message RaceResponse {
  Race race = 1;
}
message ListRacesResponse {
  repeated Race races = 1;
  PaginationResponse pagination = 2;
}

// WorldNode
message WorldNode {
  int64 id = 1;
  int64 world_id = 2;
  int64 parent_id = 3;
  string name = 4;
  string description = 5;
  Metadata metadata = 6;
}
message CreateWorldNodeRequest {
  int64 world_id = 1;
  int64 parent_id = 2;
  string name = 3;
  string description = 4;
}
message UpdateWorldNodeRequest {
  int64 id = 1;
  int64 parent_id = 2;
  string name = 3;
  string description = 4;
}
message GetWorldNodeRequest {
  int64 id = 1;
}
message DeleteWorldNodeRequest {
  int64 id = 1;
}
message ListWorldNodesRequest {
  int64 world_id = 1;
  int64 parent_id = 2;
  string name = 3;
}
message WorldNodeResponse {
  WorldNode world_node = 1;
}
message ListWorldNodesResponse {
  repeated WorldNode world_nodes = 1;
  PaginationResponse pagination = 2;
}

// WorldNodeFeature
message WorldNodeFeature {
  int64 id = 1;
  int64 world_node_id = 2;
  string feature_name = 3;
  string feature_value = 4;
  google.protobuf.Struct feature_properties = 5;
  Metadata metadata = 6;
}
message CreateWorldNodeFeatureRequest {
  int64 world_node_id = 1;
  string feature_name = 2;
  string feature_value = 3;
  google.protobuf.Struct feature_properties = 4;
}
message UpdateWorldNodeFeatureRequest {
  int64 id = 1;
  string feature_name = 2;
  string feature_value = 3;
  google.protobuf.Struct feature_properties = 4;
}
message GetWorldNodeFeatureRequest {
  int64 id = 1;
}
message DeleteWorldNodeFeatureRequest {
  int64 id = 1;
}
message ListWorldNodeFeaturesRequest {
  int64 world_node_id = 1;
  string feature_name = 2;
}
message WorldNodeFeatureResponse {
  WorldNodeFeature world_node_feature = 1;
}
message ListWorldNodeFeaturesResponse {
  repeated WorldNodeFeature world_node_features = 1;
  PaginationResponse pagination = 2;
}

// Service definitions
service WorldService {
  rpc CreateWorld(CreateWorldRequest) returns (WorldResponse);
  rpc GetWorld(GetWorldRequest) returns (WorldResponse);
  rpc UpdateWorld(UpdateWorldRequest) returns (WorldResponse);
  rpc DeleteWorld(DeleteWorldRequest) returns (WorldResponse);
  rpc ListWorlds(ListWorldsRequest) returns (ListWorldsResponse);
}

service AttributeService {
  rpc CreateAttribute(CreateAttributeRequest) returns (AttributeResponse);
  rpc GetAttribute(GetAttributeRequest) returns (AttributeResponse);
  rpc UpdateAttribute(UpdateAttributeRequest) returns (AttributeResponse);
  rpc DeleteAttribute(DeleteAttributeRequest) returns (AttributeResponse);
  rpc ListAttributes(ListAttributesRequest) returns (ListAttributesResponse);
}


service CapabilityService {
  rpc CreateCapability(CreateCapabilityRequest) returns (CapabilityResponse);
  rpc GetCapability(GetCapabilityRequest) returns (CapabilityResponse);
  rpc UpdateCapability(UpdateCapabilityRequest) returns (CapabilityResponse);
  rpc DeleteCapability(DeleteCapabilityRequest) returns (CapabilityResponse);
  rpc ListCapabilities(ListCapabilitiesRequest) returns (ListCapabilitiesResponse);
}

service CharacterClassService {
  rpc CreateCharacterClass(CreateCharacterClassRequest) returns (CharacterClassResponse);
  rpc GetCharacterClass(GetCharacterClassRequest) returns (CharacterClassResponse);
  rpc UpdateCharacterClass(UpdateCharacterClassRequest) returns (CharacterClassResponse);
  rpc DeleteCharacterClass(DeleteCharacterClassRequest) returns (CharacterClassResponse);
  rpc ListCharacterClasses(ListCharacterClassesRequest) returns (ListCharacterClassesResponse);

  rpc CreateCharacterClassFeature(CreateCharacterClassFeatureRequest) returns (CharacterClassFeatureResponse);
  rpc GetCharacterClassFeature(GetCharacterClassFeatureRequest) returns (CharacterClassFeatureResponse);
  rpc UpdateCharacterClassFeature(UpdateCharacterClassFeatureRequest) returns (CharacterClassFeatureResponse);
  rpc DeleteCharacterClassFeature(DeleteCharacterClassFeatureRequest) returns (CharacterClassFeatureResponse);
  rpc ListCharacterClassFeatures(ListCharacterClassFeaturesRequest) returns (ListCharacterClassFeaturesResponse);
}

service CurrencyService {
  rpc CreateCurrency(CreateCurrencyRequest) returns (CurrencyResponse);
  rpc GetCurrency(GetCurrencyRequest) returns (CurrencyResponse);
  rpc UpdateCurrency(UpdateCurrencyRequest) returns (CurrencyResponse);
  rpc DeleteCurrency(DeleteCurrencyRequest) returns (CurrencyResponse);
  rpc ListCurrencies(ListCurrenciesRequest) returns (ListCurrenciesResponse);
}

service EnemyService {
  rpc CreateEnemy(CreateEnemyRequest) returns (EnemyResponse);
  rpc GetEnemy(GetEnemyRequest) returns (EnemyResponse);
  rpc UpdateEnemy(UpdateEnemyRequest) returns (EnemyResponse);
  rpc DeleteEnemy(DeleteEnemyRequest) returns (EnemyResponse);
  rpc ListEnemies(ListEnemiesRequest) returns (ListEnemiesResponse);
}

service ItemCategoryService {
  rpc CreateItemCategory(CreateItemCategoryRequest) returns (ItemCategoryResponse);
  rpc GetItemCategory(GetItemCategoryRequest) returns (ItemCategoryResponse);
  rpc UpdateItemCategory(UpdateItemCategoryRequest) returns (ItemCategoryResponse);
  rpc DeleteItemCategory(DeleteItemCategoryRequest) returns (ItemCategoryResponse);
  rpc ListItemCategories(ListItemCategoriesRequest) returns (ListItemCategoriesResponse);
}

service ItemService {
  rpc CreateItem(CreateItemRequest) returns (ItemResponse);
  rpc GetItem(GetItemRequest) returns (ItemResponse);
  rpc UpdateItem(UpdateItemRequest) returns (ItemResponse);
  rpc DeleteItem(DeleteItemRequest) returns (ItemResponse);
  rpc ListItems(ListItemsRequest) returns (ListItemsResponse);
}

service NpcTemplateService {
  rpc CreateNpcTemplate(CreateNpcTemplateRequest) returns (NpcTemplateResponse);
  rpc GetNpcTemplate(GetNpcTemplateRequest) returns (NpcTemplateResponse);
  rpc UpdateNpcTemplate(UpdateNpcTemplateRequest) returns (NpcTemplateResponse);
  rpc DeleteNpcTemplate(DeleteNpcTemplateRequest) returns (NpcTemplateResponse);
  rpc ListNpcTemplates(ListNpcTemplatesRequest) returns (ListNpcTemplatesResponse);
}

service NpcSpawnRuleService {
  rpc CreateNpcSpawnRule(CreateNpcSpawnRuleRequest) returns (NpcSpawnRuleResponse);
  rpc GetNpcSpawnRule(GetNpcSpawnRuleRequest) returns (NpcSpawnRuleResponse);
  rpc UpdateNpcSpawnRule(UpdateNpcSpawnRuleRequest) returns (NpcSpawnRuleResponse);
  rpc DeleteNpcSpawnRule(DeleteNpcSpawnRuleRequest) returns (NpcSpawnRuleResponse);
  rpc ListNpcSpawnRules(ListNpcSpawnRulesRequest) returns (ListNpcSpawnRulesResponse);
}

service RaceService {
  rpc CreateRace(CreateRaceRequest) returns (RaceResponse);
  rpc GetRace(GetRaceRequest) returns (RaceResponse);
  rpc UpdateRace(UpdateRaceRequest) returns (RaceResponse);
  rpc DeleteRace(DeleteRaceRequest) returns (RaceResponse);
  rpc ListRaces(ListRacesRequest) returns (ListRacesResponse);
}

service WorldNodeService {
  rpc CreateWorldNode(CreateWorldNodeRequest) returns (WorldNodeResponse);
  rpc GetWorldNode(GetWorldNodeRequest) returns (WorldNodeResponse);
  rpc UpdateWorldNode(UpdateWorldNodeRequest) returns (WorldNodeResponse);
  rpc DeleteWorldNode(DeleteWorldNodeRequest) returns (WorldNodeResponse);
  rpc ListWorldNodes(ListWorldNodesRequest) returns (ListWorldNodesResponse);

  rpc CreateWorldNodeFeature(CreateWorldNodeFeatureRequest) returns (WorldNodeFeatureResponse);
  rpc GetWorldNodeFeature(GetWorldNodeFeatureRequest) returns (WorldNodeFeatureResponse);
  rpc UpdateWorldNodeFeature(UpdateWorldNodeFeatureRequest) returns (WorldNodeFeatureResponse);
  rpc DeleteWorldNodeFeature(DeleteWorldNodeFeatureRequest) returns (WorldNodeFeatureResponse);
  rpc ListWorldNodeFeatures(ListWorldNodeFeaturesRequest) returns (ListWorldNodeFeaturesResponse);
}
