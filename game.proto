syntax = "proto3";

package game.v1;

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";

option go_package = "github.com/ssargent/aether-core-editor/gen/game/v1;gamev1";

// Common fields used across multiple messages
message Metadata {
  google.protobuf.Timestamp created_at = 1;
  google.protobuf.Timestamp updated_at = 2;
}

// Basic identifier message
message Id {
  int64 id = 1;
}

// ----- World Definition -----

message World {
  int64 id = 1;
  string code = 2;
  string name = 3;
  string description = 4;
  Metadata metadata = 5;
}

message WorldList {
  repeated World worlds = 1;
}

// ----- Attribute Definition -----

message Attribute {
  int64 id = 1;
  string name = 2;
  string description = 3;
  Metadata metadata = 4;
}

message AttributeList {
  repeated Attribute attributes = 1;
}

// ----- Capability Definition -----

message Capability {
  int64 id = 1;
  int64 world_id = 2;
  optional int64 parent_id = 3;
  string capability_type = 4; // skill, feat, ability, power, action, feature
  string code = 5;
  string name = 6;
  string description = 7;
  google.protobuf.Struct requirements = 8;
  optional google.protobuf.Struct actions = 9;
  google.protobuf.Struct access_requirements = 10;
  repeated string tags = 11;
  optional google.protobuf.Struct gameplay_definition = 12;
  Metadata metadata = 13;
}

message CapabilityList {
  repeated Capability capabilities = 1;
}

// ----- Character Class Definition -----

message CharacterClass {
  int64 id = 1;
  int64 world_id = 2;
  string code = 3;
  string name = 4;
  string description = 5;
  int32 hit_points = 6;
  string stamina_expression = 7;
  string skillpoint_expression = 8;
  google.protobuf.Struct proficiencies = 9;
  Metadata metadata = 10;
}

message CharacterClassList {
  repeated CharacterClass classes = 1;
}

message CharacterClassFeature {
  int64 id = 1;
  int64 class_id = 2;
  int32 level = 3;
  string code = 4;
  string name = 5;
  string description = 6;
  Metadata metadata = 7;
}

message CharacterClassFeatureList {
  repeated CharacterClassFeature features = 1;
}

// ----- Currency Definition -----

message Currency {
  int64 id = 1;
  int64 world_id = 2;
  string code = 3;
  string name = 4;
  string description = 5;
  bool is_spendable = 6;
  Metadata metadata = 7;
}

message CurrencyList {
  repeated Currency currencies = 1;
}

// ----- Enemy Definition -----

message Enemy {
  int64 id = 1;
  int64 world_id = 2;
  string code = 3;
  string name = 4;
  string description = 5;
  string class = 6;
  int32 level = 7;
  int32 hit_points = 8;
  int32 stamina = 9;
  int32 strength = 10;
  int32 dexterity = 11;
  int32 constitution = 12;
  int32 intelligence = 13;
  int32 wisdom = 14;
  google.protobuf.Struct weapons = 15;
  google.protobuf.Struct armor = 16;
  Metadata metadata = 17;
}

message EnemyList {
  repeated Enemy enemies = 1;
}

// ----- Item Definition -----

message ItemCategory {
  int64 id = 1;
  optional int64 parent_id = 2;
  string name = 3;
  string description = 4;
  Metadata metadata = 5;
}

message ItemCategoryList {
  repeated ItemCategory categories = 1;
}

message Item {
  int64 id = 1;
  int64 world_id = 2;
  int64 category_id = 3;
  string code = 4;
  string name = 5;
  string description = 6;
  string item_type = 7;
  int64 base_price = 8;
  google.protobuf.Struct item_properties = 9;
  Metadata metadata = 10;
}

message ItemList {
  repeated Item items = 1;
}

// ----- NPC Definition -----

message NpcTemplate {
  int64 id = 1;
  string name = 2;
  string description = 3;
  google.protobuf.Struct npc_properties = 4;
  bool can_spawn_multiple = 5;
  bool can_respawn = 6;
  Metadata metadata = 7;
}

message NpcTemplateList {
  repeated NpcTemplate templates = 1;
}

message NpcSpawnRule {
  int64 id = 1;
  int64 npc_template_id = 2;
  int64 world_node_id = 3;
  int32 spawn_chance = 4;
  int32 spawn_quantity_min = 5;
  int32 spawn_quantity_max = 6;
  Metadata metadata = 7;
}

message NpcSpawnRuleList {
  repeated NpcSpawnRule spawn_rules = 1;
}

// ----- Race Definition -----

message Race {
  int64 id = 1;
  int64 world_id = 2;
  string code = 3;
  string name = 4;
  string description = 5;
  Metadata metadata = 6;
}

message RaceList {
  repeated Race races = 1;
}

// ----- World Node Definition -----

message WorldNode {
  int64 id = 1;
  int64 world_id = 2;
  optional int64 parent_id = 3;
  string name = 4;
  string description = 5;
  Metadata metadata = 6;
}

message WorldNodeList {
  repeated WorldNode nodes = 1;
}

message WorldNodeFeature {
  int64 id = 1;
  int64 world_node_id = 2;
  string feature_name = 3;
  string feature_value = 4;
  google.protobuf.Struct feature_properties = 5;
  Metadata metadata = 6;
}

message WorldNodeFeatureList {
  repeated WorldNodeFeature features = 1;
}

// ----- Filter Messages -----

message WorldFilter {
  optional string code = 1;
  optional string name = 2;
}

message AttributeFilter {
  optional string name = 1;
}

message CapabilityFilter {
  optional int64 world_id = 1;
  optional string capability_type = 2;
  optional string code = 3;
  optional string name = 4;
  optional int64 parent_id = 5;
  repeated string tags = 6;
}

message CharacterClassFilter {
  optional int64 world_id = 1;
  optional string code = 2;
  optional string name = 3;
}

message CharacterClassFeatureFilter {
  optional int64 class_id = 1;
  optional int32 level = 2;
  optional string code = 3;
}

message CurrencyFilter {
  optional int64 world_id = 1;
  optional string code = 2;
  optional string name = 3;
  optional bool is_spendable = 4;
}

message EnemyFilter {
  optional int64 world_id = 1;
  optional string code = 2;
  optional string name = 3;
  optional string class = 4;
  optional int32 level = 5;
}

message ItemCategoryFilter {
  optional int64 parent_id = 1;
  optional string name = 2;
}

message ItemFilter {
  optional int64 world_id = 1;
  optional int64 category_id = 2;
  optional string code = 3;
  optional string name = 4;
  optional string item_type = 5;
}

message NpcTemplateFilter {
  optional string name = 1;
  optional bool can_spawn_multiple = 2;
  optional bool can_respawn = 3;
}

message NpcSpawnRuleFilter {
  optional int64 npc_template_id = 1;
  optional int64 world_node_id = 2;
}

message RaceFilter {
  optional int64 world_id = 1;
  optional string code = 2;
  optional string name = 3;
}

message WorldNodeFilter {
  optional int64 world_id = 1;
  optional int64 parent_id = 2;
  optional string name = 3;
}

message WorldNodeFeatureFilter {
  optional int64 world_node_id = 1;
  optional string feature_name = 2;
}

// ----- Create/Update Messages -----

message CreateWorldRequest {
  string code = 1;
  string name = 2;
  string description = 3;
}

message UpdateWorldRequest {
  int64 id = 1;
  optional string code = 2;
  optional string name = 3;
  optional string description = 4;
}

message CreateAttributeRequest {
  string name = 1;
  string description = 2;
}

message UpdateAttributeRequest {
  int64 id = 1;
  optional string name = 2;
  optional string description = 3;
}

message CreateCapabilityRequest {
  int64 world_id = 1;
  optional int64 parent_id = 2;
  string capability_type = 3;
  string code = 4;
  string name = 5;
  string description = 6;
  google.protobuf.Struct requirements = 7;
  optional google.protobuf.Struct actions = 8;
  google.protobuf.Struct access_requirements = 9;
  repeated string tags = 10;
  optional google.protobuf.Struct gameplay_definition = 11;
}

message UpdateCapabilityRequest {
  int64 id = 1;
  optional int64 parent_id = 2;
  optional string capability_type = 3;
  optional string code = 4;
  optional string name = 5;
  optional string description = 6;
  optional google.protobuf.Struct requirements = 7;
  optional google.protobuf.Struct actions = 8;
  optional google.protobuf.Struct access_requirements = 9;
  optional repeated string tags = 10;
  optional google.protobuf.Struct gameplay_definition = 11;
}

message CreateCharacterClassRequest {
  int64 world_id = 1;
  string code = 2;
  string name = 3;
  string description = 4;
  int32 hit_points = 5;
  string stamina_expression = 6;
  string skillpoint_expression = 7;
  google.protobuf.Struct proficiencies = 8;
}

message UpdateCharacterClassRequest {
  int64 id = 1;
  optional string code = 2;
  optional string name = 3;
  optional string description = 4;
  optional int32 hit_points = 5;
  optional string stamina_expression = 6;
  optional string skillpoint_expression = 7;
  optional google.protobuf.Struct proficiencies = 8;
}

message CreateCharacterClassFeatureRequest {
  int64 class_id = 1;
  int32 level = 2;
  string code = 3;
  string name = 4;
  string description = 5;
}

message UpdateCharacterClassFeatureRequest {
  int64 id = 1;
  optional int32 level = 2;
  optional string code = 3;
  optional string name = 4;
  optional string description = 5;
}

message CreateCurrencyRequest {
  int64 world_id = 1;
  string code = 2;
  string name = 3;
  string description = 4;
  bool is_spendable = 5;
}

message UpdateCurrencyRequest {
  int64 id = 1;
  optional string code = 2;
  optional string name = 3;
  optional string description = 4;
  optional bool is_spendable = 5;
}

message CreateEnemyRequest {
  int64 world_id = 1;
  string code = 2;
  string name = 3;
  string description = 4;
  string class = 5;
  int32 level = 6;
  int32 hit_points = 7;
  int32 stamina = 8;
  int32 strength = 9;
  int32 dexterity = 10;
  int32 constitution = 11;
  int32 intelligence = 12;
  int32 wisdom = 13;
  google.protobuf.Struct weapons = 14;
  google.protobuf.Struct armor = 15;
}

message UpdateEnemyRequest {
  int64 id = 1;
  optional string code = 2;
  optional string name = 3;
  optional string description = 4;
  optional string class = 5;
  optional int32 level = 6;
  optional int32 hit_points = 7;
  optional int32 stamina = 8;
  optional int32 strength = 9;
  optional int32 dexterity = 10;
  optional int32 constitution = 11;
  optional int32 intelligence = 12;
  optional int32 wisdom = 13;
  optional google.protobuf.Struct weapons = 14;
  optional google.protobuf.Struct armor = 15;
}

message CreateItemCategoryRequest {
  optional int64 parent_id = 1;
  string name = 2;
  string description = 3;
}

message UpdateItemCategoryRequest {
  int64 id = 1;
  optional int64 parent_id = 2;
  optional string name = 3;
  optional string description = 4;
}

message CreateItemRequest {
  int64 world_id = 1;
  int64 category_id = 2;
  string code = 3;
  string name = 4;
  string description = 5;
  string item_type = 6;
  int64 base_price = 7;
  google.protobuf.Struct item_properties = 8;
}

message UpdateItemRequest {
  int64 id = 1;
  optional int64 category_id = 2;
  optional string code = 3;
  optional string name = 4;
  optional string description = 5;
  optional string item_type = 6;
  optional int64 base_price = 7;
  optional google.protobuf.Struct item_properties = 8;
}

message CreateNpcTemplateRequest {
  string name = 1;
  string description = 2;
  google.protobuf.Struct npc_properties = 3;
  bool can_spawn_multiple = 4;
  bool can_respawn = 5;
}

message UpdateNpcTemplateRequest {
  int64 id = 1;
  optional string name = 2;
  optional string description = 3;
  optional google.protobuf.Struct npc_properties = 4;
  optional bool can_spawn_multiple = 5;
  optional bool can_respawn = 6;
}

message CreateNpcSpawnRuleRequest {
  int64 npc_template_id = 1;
  int64 world_node_id = 2;
  int32 spawn_chance = 3;
  int32 spawn_quantity_min = 4;
  int32 spawn_quantity_max = 5;
}

message UpdateNpcSpawnRuleRequest {
  int64 id = 1;
  optional int32 spawn_chance = 2;
  optional int32 spawn_quantity_min = 3;
  optional int32 spawn_quantity_max = 4;
}

message CreateRaceRequest {
  int64 world_id = 1;
  string code = 2;
  string name = 3;
  string description = 4;
}

message UpdateRaceRequest {
  int64 id = 1;
  optional string code = 2;
  optional string name = 3;
  optional string description = 4;
}

message CreateWorldNodeRequest {
  int64 world_id = 1;
  optional int64 parent_id = 2;
  string name = 3;
  string description = 4;
}

message UpdateWorldNodeRequest {
  int64 id = 1;
  optional int64 parent_id = 2;
  optional string name = 3;
  optional string description = 4;
}

message CreateWorldNodeFeatureRequest {
  int64 world_node_id = 1;
  string feature_name = 2;
  string feature_value = 3;
  google.protobuf.Struct feature_properties = 4;
}

message UpdateWorldNodeFeatureRequest {
  int64 id = 1;
  optional string feature_name = 2;
  optional string feature_value = 3;
  optional google.protobuf.Struct feature_properties = 4;
}

// ----- Pagination -----

message PaginationRequest {
  int32 page = 1;
  int32 page_size = 2;
}

message PaginationResponse {
  int32 total_count = 1;
  int32 page_count = 2;
  int32 current_page = 3;
  int32 page_size = 4;
}

// ----- Response Messages -----

message WorldResponse {
  World world = 1;
}

message WorldListResponse {
  repeated World worlds = 1;
  PaginationResponse pagination = 2;
}

message AttributeResponse {
  Attribute attribute = 1;
}

message AttributeListResponse {
  repeated Attribute attributes = 1;
  PaginationResponse pagination = 2;
}

message CapabilityResponse {
  Capability capability = 1;
}

message CapabilityListResponse {
  repeated Capability capabilities = 1;
  PaginationResponse pagination = 2;
}

message CharacterClassResponse {
  CharacterClass character_class = 1;
}

message CharacterClassListResponse {
  repeated CharacterClass classes = 1;
  PaginationResponse pagination = 2;
}

message CharacterClassFeatureResponse {
  CharacterClassFeature feature = 1;
}

message CharacterClassFeatureListResponse {
  repeated CharacterClassFeature features = 1;
  PaginationResponse pagination = 2;
}

message CurrencyResponse {
  Currency currency = 1;
}

message CurrencyListResponse {
  repeated Currency currencies = 1;
  PaginationResponse pagination = 2;
}

message EnemyResponse {
  Enemy enemy = 1;
}

message EnemyListResponse {
  repeated Enemy enemies = 1;
  PaginationResponse pagination = 2;
}

message ItemCategoryResponse {
  ItemCategory category = 1;
}

message ItemCategoryListResponse {
  repeated ItemCategory categories = 1;
  PaginationResponse pagination = 2;
}

message ItemResponse {
  Item item = 1;
}

message ItemListResponse {
  repeated Item items = 1;
  PaginationResponse pagination = 2;
}

message NpcTemplateResponse {
  NpcTemplate template = 1;
}

message NpcTemplateListResponse {
  repeated NpcTemplate templates = 1;
  PaginationResponse pagination = 2;
}

message NpcSpawnRuleResponse {
  NpcSpawnRule spawn_rule = 1;
}

message NpcSpawnRuleListResponse {
  repeated NpcSpawnRule spawn_rules = 1;
  PaginationResponse pagination = 2;
}

message RaceResponse {
  Race race = 1;
}

message RaceListResponse {
  repeated Race races = 1;
  PaginationResponse pagination = 2;
}

message WorldNodeResponse {
  WorldNode node = 1;
}

message WorldNodeListResponse {
  repeated WorldNode nodes = 1;
  PaginationResponse pagination = 2;
}

message WorldNodeFeatureResponse {
  WorldNodeFeature feature = 1;
}

message WorldNodeFeatureListResponse {
  repeated WorldNodeFeature features = 1;
  PaginationResponse pagination = 2;
}

message DeleteResponse {
  bool success = 1;
  string message = 2;
}

// ----- Services -----

service WorldService {
  rpc CreateWorld(CreateWorldRequest) returns (WorldResponse) {}
  rpc GetWorld(Id) returns (WorldResponse) {}
  rpc UpdateWorld(UpdateWorldRequest) returns (WorldResponse) {}
  rpc DeleteWorld(Id) returns (DeleteResponse) {}
  rpc ListWorlds(WorldFilter) returns (WorldListResponse) {}
  rpc PaginatedListWorlds(PaginationRequest) returns (WorldListResponse) {}
}

service AttributeService {
  rpc CreateAttribute(CreateAttributeRequest) returns (AttributeResponse) {}
  rpc GetAttribute(Id) returns (AttributeResponse) {}
  rpc UpdateAttribute(UpdateAttributeRequest) returns (AttributeResponse) {}
  rpc DeleteAttribute(Id) returns (DeleteResponse) {}
  rpc ListAttributes(AttributeFilter) returns (AttributeListResponse) {}
  rpc PaginatedListAttributes(PaginationRequest) returns (AttributeListResponse) {}
}

service CapabilityService {
  rpc CreateCapability(CreateCapabilityRequest) returns (Capability) {}
  rpc GetCapability(Id) returns (Capability) {}
  rpc UpdateCapability(UpdateCapabilityRequest) returns (Capability) {}
  rpc DeleteCapability(Id) returns (google.protobuf.Empty) {}
  rpc ListCapabilities(CapabilityFilter) returns (CapabilityList) {}
  rpc PaginatedListCapabilities(PaginationRequest) returns (stream Capability) {}
}

service CharacterClassService {
  rpc CreateCharacterClass(CreateCharacterClassRequest) returns (CharacterClass) {}
  rpc GetCharacterClass(Id) returns (CharacterClass) {}
  rpc UpdateCharacterClass(UpdateCharacterClassRequest) returns (CharacterClass) {}
  rpc DeleteCharacterClass(Id) returns (google.protobuf.Empty) {}
  rpc ListCharacterClasses(CharacterClassFilter) returns (CharacterClassList) {}
  rpc PaginatedListCharacterClasses(PaginationRequest) returns (stream CharacterClass) {}
  
  rpc CreateCharacterClassFeature(CreateCharacterClassFeatureRequest) returns (CharacterClassFeature) {}
  rpc GetCharacterClassFeature(Id) returns (CharacterClassFeature) {}
  rpc UpdateCharacterClassFeature(UpdateCharacterClassFeatureRequest) returns (CharacterClassFeature) {}
  rpc DeleteCharacterClassFeature(Id) returns (google.protobuf.Empty) {}
  rpc ListCharacterClassFeatures(CharacterClassFeatureFilter) returns (CharacterClassFeatureList) {}
}

service CurrencyService {
  rpc CreateCurrency(CreateCurrencyRequest) returns (Currency) {}
  rpc GetCurrency(Id) returns (Currency) {}
  rpc UpdateCurrency(UpdateCurrencyRequest) returns (Currency) {}
  rpc DeleteCurrency(Id) returns (google.protobuf.Empty) {}
  rpc ListCurrencies(CurrencyFilter) returns (CurrencyList) {}
}

service EnemyService {
  rpc CreateEnemy(CreateEnemyRequest) returns (Enemy) {}
  rpc GetEnemy(Id) returns (Enemy) {}
  rpc UpdateEnemy(UpdateEnemyRequest) returns (Enemy) {}
  rpc DeleteEnemy(Id) returns (google.protobuf.Empty) {}
  rpc ListEnemies(EnemyFilter) returns (EnemyList) {}
  rpc PaginatedListEnemies(PaginationRequest) returns (stream Enemy) {}
}

service ItemService {
  rpc CreateItemCategory(CreateItemCategoryRequest) returns (ItemCategory) {}
  rpc GetItemCategory(Id) returns (ItemCategory) {}
  rpc UpdateItemCategory(UpdateItemCategoryRequest) returns (ItemCategory) {}
  rpc DeleteItemCategory(Id) returns (google.protobuf.Empty) {}
  rpc ListItemCategories(ItemCategoryFilter) returns (ItemCategoryList) {}
  
  rpc CreateItem(CreateItemRequest) returns (Item) {}
  rpc GetItem(Id) returns (Item) {}
  rpc UpdateItem(UpdateItemRequest) returns (Item) {}
  rpc DeleteItem(Id) returns (google.protobuf.Empty) {}
  rpc ListItems(ItemFilter) returns (ItemList) {}
  rpc PaginatedListItems(PaginationRequest) returns (stream Item) {}
}

service NpcService {
  rpc CreateNpcTemplate(CreateNpcTemplateRequest) returns (NpcTemplate) {}
  rpc GetNpcTemplate(Id) returns (NpcTemplate) {}
  rpc UpdateNpcTemplate(UpdateNpcTemplateRequest) returns (NpcTemplate) {}
  rpc DeleteNpcTemplate(Id) returns (google.protobuf.Empty) {}
  rpc ListNpcTemplates(NpcTemplateFilter) returns (NpcTemplateList) {}
  
  rpc CreateNpcSpawnRule(CreateNpcSpawnRuleRequest) returns (NpcSpawnRule) {}
  rpc GetNpcSpawnRule(Id) returns (NpcSpawnRule) {}
  rpc UpdateNpcSpawnRule(UpdateNpcSpawnRuleRequest) returns (NpcSpawnRule) {}
  rpc DeleteNpcSpawnRule(Id) returns (google.protobuf.Empty) {}
  rpc ListNpcSpawnRules(NpcSpawnRuleFilter) returns (NpcSpawnRuleList) {}
}

service RaceService {
  rpc CreateRace(CreateRaceRequest) returns (Race) {}
  rpc GetRace(Id) returns (Race) {}
  rpc UpdateRace(UpdateRaceRequest) returns (Race) {}
  rpc DeleteRace(Id) returns (google.protobuf.Empty) {}
  rpc ListRaces(RaceFilter) returns (RaceList) {}
}

service WorldNodeService {
  rpc CreateWorldNode(CreateWorldNodeRequest) returns (WorldNode) {}
  rpc GetWorldNode(Id) returns (WorldNode) {}
  rpc UpdateWorldNode(UpdateWorldNodeRequest) returns (WorldNode) {}
  rpc DeleteWorldNode(Id) returns (google.protobuf.Empty) {}
  rpc ListWorldNodes(WorldNodeFilter) returns (WorldNodeList) {}
  
  rpc CreateWorldNodeFeature(CreateWorldNodeFeatureRequest) returns (WorldNodeFeature) {}
  rpc GetWorldNodeFeature(Id) returns (WorldNodeFeature) {}
  rpc UpdateWorldNodeFeature(UpdateWorldNodeFeatureRequest) returns (WorldNodeFeature) {}
  rpc DeleteWorldNodeFeature(Id) returns (google.protobuf.Empty) {}
  rpc ListWorldNodeFeatures(WorldNodeFeatureFilter) returns (WorldNodeFeatureList) {}
}

// Unified GameManagement service for administrative operations 
service GameManagementService {
  // Bulk operations
  rpc ExportWorld(Id) returns (stream google.protobuf.Struct) {}
  rpc ImportWorld(stream google.protobuf.Struct) returns (World) {}
  
  // Statistics and overview
  rpc GetWorldStatistics(Id) returns (google.protobuf.Struct) {}
  rpc GetGameSystemHealth(google.protobuf.Empty) returns (google.protobuf.Struct) {}
}
