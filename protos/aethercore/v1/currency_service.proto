syntax = "proto3";

package aethercore.v1;

option go_package = "github.com/ssargent/aether-core-editor/gen/aethercore/v1;aethercorev1";

import "aethercore/v1/common.proto";

// Currency
message Currency {
  int64 id = 1;
  int64 world_id = 2;
  string code = 3;
  string name = 4;
  string description = 5;
  bool is_spendable = 6;
  Metadata metadata = 7;
}

message CreateCurrencyRequest {
  int64 world_id = 1;
  string code = 2;
  string name = 3;
  string description = 4;
  bool is_spendable = 5;
}

message UpdateCurrencyRequest {
  int64 id = 1;
  string code = 2;
  string name = 3;
  string description = 4;
  bool is_spendable = 5;
}

message GetCurrencyRequest {
  int64 id = 1;
}

message DeleteCurrencyRequest {
  int64 id = 1;
}

message ListCurrenciesRequest {
  int64 world_id = 1;
  string code = 2;
  string name = 3;
  bool is_spendable = 4;
}

message CurrencyResponse {
  Currency currency = 1;
}

message ListCurrenciesResponse {
  repeated Currency currencies = 1;
  PaginationResponse pagination = 2;
}

// Currency filter for advanced querying
message CurrencyFilter {
  optional int64 world_id = 1;
  optional string code = 2;
  optional string name = 3;
  optional bool is_spendable = 4;
}

service CurrencyService {
  rpc CreateCurrency(CreateCurrencyRequest) returns (CurrencyResponse);
  rpc GetCurrency(GetCurrencyRequest) returns (CurrencyResponse);
  rpc UpdateCurrency(UpdateCurrencyRequest) returns (CurrencyResponse);
  rpc DeleteCurrency(DeleteCurrencyRequest) returns (DeleteResponse);
  rpc ListCurrencies(ListCurrenciesRequest) returns (ListCurrenciesResponse);
}
