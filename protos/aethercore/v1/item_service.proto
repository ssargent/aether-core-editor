syntax = "proto3";

package aethercore.v1;

option go_package = "github.com/ssargent/aether-core-editor/gen/aethercore/v1;aethercorev1";

import "aethercore/v1/common.proto";
import "google/protobuf/struct.proto";

// ItemCategory
message ItemCategory {
  int64 id = 1;
  optional int64 parent_id = 2;
  string name = 3;
  string description = 4;
  Metadata metadata = 5;
}

message CreateItemCategoryRequest {
  optional int64 parent_id = 1;
  string name = 2;
  string description = 3;
}

message UpdateItemCategoryRequest {
  int64 id = 1;
  optional int64 parent_id = 2;
  optional string name = 3;
  optional string description = 4;
}

message GetItemCategoryRequest {
  int64 id = 1;
}

message DeleteItemCategoryRequest {
  int64 id = 1;
}

message ListItemCategoriesRequest {
  int64 parent_id = 1;
  string name = 2;
}

message ItemCategoryResponse {
  ItemCategory item_category = 1;
}

message ListItemCategoriesResponse {
  repeated ItemCategory item_categories = 1;
  PaginationResponse pagination = 2;
}

// Item
message Item {
  int64 id = 1;
  int64 world_id = 2;
  int64 category_id = 3;
  string code = 4;
  string name = 5;
  string description = 6;
  string item_type = 7;
  int64 base_price = 8;
  google.protobuf.Struct item_properties = 9;
  Metadata metadata = 10;
}

message CreateItemRequest {
  int64 world_id = 1;
  int64 category_id = 2;
  string code = 3;
  string name = 4;
  string description = 5;
  string item_type = 6;
  int64 base_price = 7;
  google.protobuf.Struct item_properties = 8;
}

message UpdateItemRequest {
  int64 id = 1;
  int64 category_id = 2;
  string code = 3;
  string name = 4;
  string description = 5;
  string item_type = 6;
  int64 base_price = 7;
  google.protobuf.Struct item_properties = 8;
}

message GetItemRequest {
  int64 id = 1;
}

message DeleteItemRequest {
  int64 id = 1;
}

message ListItemsRequest {
  int64 world_id = 1;
  int64 category_id = 2;
  string code = 3;
  string name = 4;
  string item_type = 5;
}

message ItemResponse {
  Item item = 1;
}

message ListItemsResponse {
  repeated Item items = 1;
  PaginationResponse pagination = 2;
}

// Item filters for advanced querying
message ItemCategoryFilter {
  optional int64 parent_id = 1;
  optional string name = 2;
}

message ItemFilter {
  optional int64 world_id = 1;
  optional int64 category_id = 2;
  optional string code = 3;
  optional string name = 4;
  optional string item_type = 5;
}

service ItemCategoryService {
  rpc CreateItemCategory(CreateItemCategoryRequest) returns (ItemCategoryResponse);
  rpc GetItemCategory(GetItemCategoryRequest) returns (ItemCategoryResponse);
  rpc UpdateItemCategory(UpdateItemCategoryRequest) returns (ItemCategoryResponse);
  rpc DeleteItemCategory(DeleteItemCategoryRequest) returns (DeleteResponse);
  rpc ListItemCategories(ListItemCategoriesRequest) returns (ListItemCategoriesResponse);
}

service ItemService {
  rpc CreateItem(CreateItemRequest) returns (ItemResponse);
  rpc GetItem(GetItemRequest) returns (ItemResponse);
  rpc UpdateItem(UpdateItemRequest) returns (ItemResponse);
  rpc DeleteItem(DeleteItemRequest) returns (DeleteResponse);
  rpc ListItems(ListItemsRequest) returns (ListItemsResponse);
}
