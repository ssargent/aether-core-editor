syntax = "proto3";

package aethercore.v1;

option go_package = "github.com/ssargent/aether-core-editor/gen/aethercore/v1;aethercorev1";

import "aethercore/v1/common.proto";
import "google/protobuf/struct.proto";

// Capability
message Capability {
  int64 id = 1;
  int64 world_id = 2;
  optional int64 parent_id = 3;
  string capability_type = 4;
  string code = 5;
  string name = 6;
  string description = 7;
  google.protobuf.Struct requirements = 8;
  optional google.protobuf.Struct actions = 9;
  google.protobuf.Struct access_requirements = 10;
  repeated string tags = 11;
  optional google.protobuf.Struct gameplay_definition = 12;
  Metadata metadata = 13;
}

message CreateCapabilityRequest {
  int64 world_id = 1;
  optional int64 parent_id = 2;
  string capability_type = 3;
  string code = 4;
  string name = 5;
  string description = 6;
  google.protobuf.Struct requirements = 7;
  optional google.protobuf.Struct actions = 8;
  google.protobuf.Struct access_requirements = 9;
  repeated string tags = 10;
  optional google.protobuf.Struct gameplay_definition = 11;
}

message UpdateCapabilityRequest {
  int64 id = 1;
  optional int64 parent_id = 2;
  optional string capability_type = 3;
  optional string code = 4;
  optional string name = 5;
  optional string description = 6;
  optional google.protobuf.Struct requirements = 7;
  optional google.protobuf.Struct actions = 8;
  optional google.protobuf.Struct access_requirements = 9;
  repeated string tags = 10;
  optional google.protobuf.Struct gameplay_definition = 11;
}

message GetCapabilityRequest {
  int64 id = 1;
}

message DeleteCapabilityRequest {
  int64 id = 1;
}

message ListCapabilitiesRequest {
  int64 world_id = 1;
  string capability_type = 2;
  string code = 3;
  string name = 4;
  int64 parent_id = 5;
  repeated string tags = 6;
}

message CapabilityResponse {
  Capability capability = 1;
}

message ListCapabilitiesResponse {
  repeated Capability capabilities = 1;
  PaginationResponse pagination = 2;
}

// Capability filter for advanced querying
message CapabilityFilter {
  optional int64 world_id = 1;
  optional string capability_type = 2;
  optional string code = 3;
  optional string name = 4;
  optional int64 parent_id = 5;
  repeated string tags = 6;
}

service CapabilityService {
  rpc CreateCapability(CreateCapabilityRequest) returns (CapabilityResponse);
  rpc GetCapability(GetCapabilityRequest) returns (CapabilityResponse);
  rpc UpdateCapability(UpdateCapabilityRequest) returns (CapabilityResponse);
  rpc DeleteCapability(DeleteCapabilityRequest) returns (DeleteResponse);
  rpc ListCapabilities(ListCapabilitiesRequest) returns (ListCapabilitiesResponse);
}
