syntax = "proto3";

package aethercore.v1;

option go_package = "github.com/ssargent/aether-core-editor/gen/aethercore/v1;aethercorev1";

import "aethercore/v1/common.proto";
import "google/protobuf/struct.proto";

// Enemy
message Enemy {
  int64 id = 1;
  int64 world_id = 2;
  string code = 3;
  string name = 4;
  string description = 5;
  string class_name = 6;
  int32 level = 7;
  int32 hit_points = 8;
  int32 stamina = 9;
  int32 strength = 10;
  int32 dexterity = 11;
  int32 constitution = 12;
  int32 intelligence = 13;
  int32 wisdom = 14;
  google.protobuf.Struct weapons = 15;
  google.protobuf.Struct armor = 16;
  Metadata metadata = 17;
}

message CreateEnemyRequest {
  int64 world_id = 1;
  string code = 2;
  string name = 3;
  string description = 4;
  string class_name = 5;
  int32 level = 6;
  int32 hit_points = 7;
  int32 stamina = 8;
  int32 strength = 9;
  int32 dexterity = 10;
  int32 constitution = 11;
  int32 intelligence = 12;
  int32 wisdom = 13;
  google.protobuf.Struct weapons = 14;
  google.protobuf.Struct armor = 15;
}

message UpdateEnemyRequest {
  int64 id = 1;
  string code = 2;
  string name = 3;
  string description = 4;
  string class_name = 5;
  int32 level = 6;
  int32 hit_points = 7;
  int32 stamina = 8;
  int32 strength = 9;
  int32 dexterity = 10;
  int32 constitution = 11;
  int32 intelligence = 12;
  int32 wisdom = 13;
  google.protobuf.Struct weapons = 14;
  google.protobuf.Struct armor = 15;
}

message GetEnemyRequest {
  int64 id = 1;
}

message DeleteEnemyRequest {
  int64 id = 1;
}

message ListEnemiesRequest {
  int64 world_id = 1;
  string code = 2;
  string name = 3;
  string class_name = 4;
  int32 level = 5;
}

message EnemyResponse {
  Enemy enemy = 1;
}

message ListEnemiesResponse {
  repeated Enemy enemies = 1;
  PaginationResponse pagination = 2;
}

// Enemy filter for advanced querying
message EnemyFilter {
  optional int64 world_id = 1;
  optional string code = 2;
  optional string name = 3;
  optional string class_name = 4;
  optional int32 level = 5;
}

service EnemyService {
  rpc CreateEnemy(CreateEnemyRequest) returns (EnemyResponse);
  rpc GetEnemy(GetEnemyRequest) returns (EnemyResponse);
  rpc UpdateEnemy(UpdateEnemyRequest) returns (EnemyResponse);
  rpc DeleteEnemy(DeleteEnemyRequest) returns (DeleteResponse);
  rpc ListEnemies(ListEnemiesRequest) returns (ListEnemiesResponse);
}
