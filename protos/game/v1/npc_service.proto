syntax = "proto3";

package game.v1;

option go_package = "github.com/ssargent/aether-core-editor/gen/game/v1;gamev1";

import "protos/game/v1/common.proto";
import "google/protobuf/struct.proto";

// NpcTemplate
message NpcTemplate {
  int64 id = 1;
  string name = 2;
  string description = 3;
  google.protobuf.Struct npc_properties = 4;
  bool can_spawn_multiple = 5;
  bool can_respawn = 6;
  Metadata metadata = 7;
}

message CreateNpcTemplateRequest {
  string name = 1;
  string description = 2;
  google.protobuf.Struct npc_properties = 3;
  bool can_spawn_multiple = 4;
  bool can_respawn = 5;
}

message UpdateNpcTemplateRequest {
  int64 id = 1;
  string name = 2;
  string description = 3;
  google.protobuf.Struct npc_properties = 4;
  bool can_spawn_multiple = 5;
  bool can_respawn = 6;
}

message GetNpcTemplateRequest {
  int64 id = 1;
}

message DeleteNpcTemplateRequest {
  int64 id = 1;
}

message ListNpcTemplatesRequest {
  string name = 1;
  bool can_spawn_multiple = 2;
  bool can_respawn = 3;
}

message NpcTemplateResponse {
  NpcTemplate npc_template = 1;
}

message ListNpcTemplatesResponse {
  repeated NpcTemplate npc_templates = 1;
  PaginationResponse pagination = 2;
}

// NpcSpawnRule
message NpcSpawnRule {
  int64 id = 1;
  int64 npc_template_id = 2;
  int64 world_node_id = 3;
  int32 spawn_chance = 4;
  int32 spawn_quantity_min = 5;
  int32 spawn_quantity_max = 6;
  Metadata metadata = 7;
}

message CreateNpcSpawnRuleRequest {
  int64 npc_template_id = 1;
  int64 world_node_id = 2;
  int32 spawn_chance = 3;
  int32 spawn_quantity_min = 4;
  int32 spawn_quantity_max = 5;
}

message UpdateNpcSpawnRuleRequest {
  int64 id = 1;
  int32 spawn_chance = 2;
  int32 spawn_quantity_min = 3;
  int32 spawn_quantity_max = 4;
}

message GetNpcSpawnRuleRequest {
  int64 id = 1;
}

message DeleteNpcSpawnRuleRequest {
  int64 id = 1;
}

message ListNpcSpawnRulesRequest {
  int64 npc_template_id = 1;
  int64 world_node_id = 2;
}

message NpcSpawnRuleResponse {
  NpcSpawnRule npc_spawn_rule = 1;
}

message ListNpcSpawnRulesResponse {
  repeated NpcSpawnRule npc_spawn_rules = 1;
  PaginationResponse pagination = 2;
}

// NPC filters for advanced querying
message NpcTemplateFilter {
  optional string name = 1;
  optional bool can_spawn_multiple = 2;
  optional bool can_respawn = 3;
}

message NpcSpawnRuleFilter {
  optional int64 npc_template_id = 1;
  optional int64 world_node_id = 2;
}

service NpcTemplateService {
  rpc CreateNpcTemplate(CreateNpcTemplateRequest) returns (NpcTemplateResponse);
  rpc GetNpcTemplate(GetNpcTemplateRequest) returns (NpcTemplateResponse);
  rpc UpdateNpcTemplate(UpdateNpcTemplateRequest) returns (NpcTemplateResponse);
  rpc DeleteNpcTemplate(DeleteNpcTemplateRequest) returns (DeleteResponse);
  rpc ListNpcTemplates(ListNpcTemplatesRequest) returns (ListNpcTemplatesResponse);
}

service NpcSpawnRuleService {
  rpc CreateNpcSpawnRule(CreateNpcSpawnRuleRequest) returns (NpcSpawnRuleResponse);
  rpc GetNpcSpawnRule(GetNpcSpawnRuleRequest) returns (NpcSpawnRuleResponse);
  rpc UpdateNpcSpawnRule(UpdateNpcSpawnRuleRequest) returns (NpcSpawnRuleResponse);
  rpc DeleteNpcSpawnRule(DeleteNpcSpawnRuleRequest) returns (DeleteResponse);
  rpc ListNpcSpawnRules(ListNpcSpawnRulesRequest) returns (ListNpcSpawnRulesResponse);
}
